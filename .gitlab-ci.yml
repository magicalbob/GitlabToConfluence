stages:
 - test
 - scan
 - build
 - publish

variables:
  SONAR_SCANNER_VERSION: 4.8.0.2856

test_job:
  stage: test
  tags:
    - linux
  script:
    - sudo apt-get update
    - sudo rm -rf /var/lib/dpkg/lock-frontend /var/lib/dpkg/lock /var/cache/debconf/*.dat /var/cache/apt/archives/lock
    - sudo dpkg --configure -a
    - sudo apt-get install -f
    - sudo apt-get install -y python3-dev python3-pip
    - sh testscript.sh
  artifacts:
    paths:
      - src/coverage.xml
  variables:
    GIT_STRATEGY: clone

scan_job:
  stage: scan
  tags:
    - linux
  script:
    - sudo apt-get update
    - sudo rm -rf /var/lib/dpkg/lock-frontend /var/lib/dpkg/lock /var/cache/debconf/*.dat /var/cache/apt/archives/lock
    - sudo dpkg --configure -a
    - sudo apt-get install -f
    - sudo apt-get install -y unzip default-jre
    - pushd ~
    - curl -o /tmp/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
    - unzip -n /tmp/sonar-scanner.zip
    - popd
    - ~/sonar-scanner-4.8.0.2856/bin/sonar-scanner
  dependencies:
    - test_job
  artifacts:
    paths:
      - src/coverage.xml
  variables:
    GIT_STRATEGY: clone

build:
  stage: build
  tags:
    - linux
  script:
    - sudo apt-get update
    - sudo rm -rf /var/lib/dpkg/lock-frontend /var/lib/dpkg/lock /var/cache/debconf/*.dat /var/cache/apt/archives/lock
    - sudo dpkg --configure -a
    - sudo apt-get install -f
    - sudo apt-get install -y python3-dev python3-pip
    - pip3 install -r requirements.txt
    - cd src
    - python3 setup.py sdist bdist_wheel
  artifacts:
    paths:
      - src/dist/*.tar.gz
      - src/dist/*.whl

publish:
  stage: publish
  tags:
    - linux
  script:
    - sudo apt-get update
    - sudo rm -rf /var/lib/dpkg/lock-frontend /var/lib/dpkg/lock /var/cache/debconf/*.dat /var/cache/apt/archives/lock
    - sudo apt-get install -y keyboard-configuration
    - sudo dpkg-reconfigure keyboard-configuration
    - sudo dpkg --configure -a
    - sudo apt-get install -f
    - sudo apt-get install -y python3-dev python3-pip
    - pip install twine
    - ~/.local/bin/twine upload --repository-url https://nexus.ellisbs.co.uk/repository/pypi-hosted/ --username $PYPI_USERNAME --password $PYPI_PASSWORD src/dist/*
  artifacts:
    paths:
      - src/dist/*.tar.gz
      - src/dist/*.whl
  dependencies:
    - build
